

namespace GraphQL.AspNet.Examples.StrawberryShakeClient
{
    using System;
    using System.Threading.Tasks;
    using Microsoft.Extensions.DependencyInjection;

    internal class Program
    {
        static async Task Main(string[] args)
        {
            var services = new ServiceCollection();

            // Add the graphql server
            // this call is code generated by Strawberry shake, it does not exist in the project files
            services.AddTimeOfDayServer()
                .ConfigureHttpClient(client =>
                {
                    client.BaseAddress = new Uri("http://localhost:5000/graphql");
                })
                .ConfigureWebSocketClient(client =>
                {
                    client.Uri = new Uri("ws://localhost:5000/graphql");
                });

            var provider = services.BuildServiceProvider();

            using var scope = provider.CreateScope();

            var server = scope.ServiceProvider.GetService<TimeOfDayServer>();

            
            // do a get request which won't return until the server is online
            // this makes sure that if the server and client are started 
            // at the same time in this demo that hte client wont try to subscribe until
            // the server is ready
            var time = await server.GetCurrentTime.ExecuteAsync();
            Console.WriteLine($"Client Started...{time.Data.CurrentTime}");

            // subscribe to the server and print time events to the console
            server.OnTimeChanged.Watch()
                .Subscribe(result =>
                {
                    var formattedTime = "-error-";
                    var time = result?.Data?.OnTimeChanged?.CurrentTime;
                    if (time is not null)
                    {
                        formattedTime = time;
                    }
                
                    Console.WriteLine($"Server Time: {time}");
                });

            Console.ReadKey();

        }
    }
}
